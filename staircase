-- program arguments
-- expected format: <direction> <distance>
local args = {...}

-- checks validity of arguments
local function goodArgs()
  -- checks for corect number of arguments
  if #args == 2 then
    -- validates direction argument
    if args[1] == "up" or args[1] == "down" then
      -- checks that second argument is a number
      if tonumber(args[2]) then
        -- replaces string value with number value
        args[2] = tonumber(args[2])
        -- checks that second argument is within bounds
        if args[2] > 0 and args[2] < 255 then
          return true
        end
      end
    end
  end
  return false
end

-- manipulates turtle to staircase upward
local function staircaseUp(distance)
  for i = 1, distance do
    turtle.dig()
    turtle.forward()
    
    -- ensures staircase continuity
    if not turtle.detectDown() then
      turtle.placeDown()
    end
    
    turtle.digUp()
    turtle.up()
    turtle.digUp()
    turtle.up()
    turtle.down()
  end
end

-- manipulates turtle to staircase downward
local function staircaseDown(distance)
  for i = 1, distance do
    turtle.dig()
    turtle.forward()
    turtle.digUp()
    turtle.digDown()
    turtle.down()
    
    -- ensures staircase continuity
    if not turtle.detectDown() then
      turtle.placeDown()
    end
    
  end
end

-- runs program
local function main()
  if goodArgs() then
    if args[1] == "up" then
      staircaseUp(args[2])
      print "Staircasing..."
    else
      staircaseDown(args[2])
      print "Staircasing..."
    end
  else
    print "Usage: staircase <direction> <distance>"
  end
end

main()
